# Generated by Django 5.2.3 on 2025-06-25 16:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spotify_id', models.CharField(max_length=255, unique=True)),
                ('uri', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=500)),
                ('artists', models.JSONField(default=list)),
                ('album_name', models.CharField(blank=True, max_length=500)),
                ('album_image_url', models.URLField(blank=True)),
                ('duration_ms', models.IntegerField()),
                ('popularity', models.IntegerField(default=0)),
                ('preview_url', models.URLField(blank=True)),
                ('valence', models.FloatField(blank=True, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('danceability', models.FloatField(blank=True, null=True)),
                ('tempo', models.FloatField(blank=True, null=True)),
                ('loudness', models.FloatField(blank=True, null=True)),
                ('speechiness', models.FloatField(blank=True, null=True)),
                ('acousticness', models.FloatField(blank=True, null=True)),
                ('instrumentalness', models.FloatField(blank=True, null=True)),
                ('liveness', models.FloatField(blank=True, null=True)),
                ('computed_mood_score', models.FloatField(blank=True, null=True)),
                ('mood_label', models.CharField(blank=True, max_length=50)),
                ('genres', models.JSONField(blank=True, default=list)),
                ('audio_features_fetched', models.BooleanField(default=False)),
                ('last_analyzed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'music_track',
            },
        ),
        migrations.CreateModel(
            name='ListeningSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_start', models.DateTimeField()),
                ('session_end', models.DateTimeField(blank=True, null=True)),
                ('total_minutes', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('average_valence', models.FloatField(default=0.5)),
                ('average_energy', models.FloatField(default=0.5)),
                ('average_danceability', models.FloatField(default=0.5)),
                ('average_tempo', models.FloatField(default=120.0)),
                ('computed_mood_score', models.FloatField(default=0.5)),
                ('mood_label', models.CharField(default='neutral', max_length=50)),
                ('total_tracks', models.IntegerField(default=0)),
                ('unique_artists', models.IntegerField(default=0)),
                ('unique_albums', models.IntegerField(default=0)),
                ('listening_context', models.CharField(blank=True, max_length=100)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listening_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'music_listening_session',
                'ordering': ['-session_start'],
            },
        ),
        migrations.CreateModel(
            name='MusicMoodProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valence_weight', models.FloatField(default=0.4)),
                ('energy_weight', models.FloatField(default=0.3)),
                ('danceability_weight', models.FloatField(default=0.2)),
                ('tempo_weight', models.FloatField(default=0.1)),
                ('current_mood_score', models.FloatField(default=0.5)),
                ('current_mood_label', models.CharField(default='neutral', max_length=50)),
                ('last_mood_update', models.DateTimeField(auto_now=True)),
                ('average_listening_hours_per_day', models.FloatField(default=0.0)),
                ('preferred_genres', models.JSONField(blank=True, default=list)),
                ('top_artists', models.JSONField(blank=True, default=list)),
                ('mood_affects_plant_growth', models.BooleanField(default=True)),
                ('mood_growth_multiplier', models.FloatField(default=1.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='music_mood_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'music_mood_profile',
            },
        ),
        migrations.CreateModel(
            name='SpotifyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField()),
                ('token_expires_at', models.DateTimeField()),
                ('token_type', models.CharField(default='Bearer', max_length=50)),
                ('scope', models.TextField(blank=True)),
                ('spotify_user_id', models.CharField(max_length=255, unique=True)),
                ('display_name', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('profile_image_url', models.URLField(blank=True)),
                ('country', models.CharField(blank=True, max_length=5)),
                ('product', models.CharField(blank=True, max_length=50)),
                ('auto_mood_analysis', models.BooleanField(default=True)),
                ('include_in_plant_growth', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='spotify_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'music_spotify_profile',
            },
        ),
        migrations.CreateModel(
            name='PlaylistRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_mood', models.CharField(max_length=50)),
                ('current_mood', models.CharField(max_length=50)),
                ('recommendation_reason', models.TextField()),
                ('playlist_name', models.CharField(max_length=255)),
                ('playlist_description', models.TextField(blank=True)),
                ('spotify_playlist_id', models.CharField(blank=True, max_length=255)),
                ('spotify_playlist_url', models.URLField(blank=True)),
                ('was_viewed', models.BooleanField(default=False)),
                ('was_played', models.BooleanField(default=False)),
                ('user_rating', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('played_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_recommendations', to=settings.AUTH_USER_MODEL)),
                ('recommended_tracks', models.ManyToManyField(related_name='playlist_recommendations', to='music.track')),
            ],
            options={
                'db_table': 'music_playlist_recommendation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MoodJournalSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mood_detected', models.CharField(max_length=50)),
                ('suggestion_text', models.TextField()),
                ('suggestion_type', models.CharField(max_length=50)),
                ('was_used', models.BooleanField(default=False)),
                ('was_helpful', models.BooleanField(blank=True, null=True)),
                ('user_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='music.listeningsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mood_journal_suggestions', to=settings.AUTH_USER_MODEL)),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='music.track')),
            ],
            options={
                'db_table': 'music_mood_journal_suggestion',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserTrackHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played_at', models.DateTimeField()),
                ('progress_ms', models.IntegerField(default=0)),
                ('was_skipped', models.BooleanField(default=False)),
                ('play_duration_ms', models.IntegerField(default=0)),
                ('context_type', models.CharField(blank=True, max_length=50)),
                ('context_uri', models.CharField(blank=True, max_length=255)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('shuffle_state', models.BooleanField(default=False)),
                ('repeat_state', models.CharField(default='off', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='track_plays', to='music.listeningsession')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_history', to='music.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='track_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'music_user_track_history',
                'ordering': ['-played_at'],
                'indexes': [models.Index(fields=['user', '-played_at'], name='music_user__user_id_b01ef1_idx'), models.Index(fields=['user', 'track'], name='music_user__user_id_53df70_idx')],
            },
        ),
    ]
