# Generated by Django 5.2.3 on 2025-06-25 16:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('journal', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='My PlantPal', max_length=100)),
                ('species', models.CharField(choices=[('succulent', 'Succulent'), ('fern', 'Fern'), ('flowering', 'Flowering Plant'), ('tree', 'Tree'), ('herb', 'Herb'), ('vine', 'Vine')], default='flowering', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('growth_points', models.IntegerField(default=0, help_text='Growth points accumulated from mood activities', validators=[django.core.validators.MinValueValidator(0)])),
                ('stage', models.CharField(choices=[('seedling', 'Seedling'), ('sprout', 'Sprout'), ('bloom', 'Bloom'), ('wilt', 'Wilt')], default='seedling', help_text='Current plant stage (seedling → sprout → bloom → wilt)', max_length=20)),
                ('growth_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('growth_stage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('health', models.IntegerField(default=80, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('health_score', models.IntegerField(default=80, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('health_status', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('critical', 'Critical')], default='good', max_length=20)),
                ('last_watered', models.DateTimeField(blank=True, null=True)),
                ('last_watered_at', models.DateTimeField(blank=True, null=True)),
                ('last_fertilized', models.DateTimeField(blank=True, null=True)),
                ('water_level', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('care_streak', models.IntegerField(default=0, help_text='Number of consecutive days the plant has been cared for')),
                ('last_care_date', models.DateField(blank=True, help_text='Last date any care action was performed', null=True)),
                ('journal_mood_score', models.FloatField(default=0.5, help_text='Mood score from journal entries (0.0 to 1.0)')),
                ('spotify_mood_score', models.FloatField(default=0.5, help_text='Mood score from Spotify music (0.0 to 1.0)')),
                ('music_mood_score', models.FloatField(default=0.5, help_text='Alias for spotify_mood_score')),
                ('combined_mood_score', models.FloatField(default=0.5, help_text='Weighted average of journal and music mood')),
                ('current_mood_influence', models.CharField(default='neutral', max_length=50)),
                ('music_boost_active', models.BooleanField(default=False)),
                ('total_music_minutes', models.IntegerField(default=0, help_text='Total minutes of music listened')),
                ('seedling_threshold', models.IntegerField(default=100, help_text='Growth points needed for sprout')),
                ('sprout_threshold', models.IntegerField(default=300, help_text='Growth points needed for bloom')),
                ('bloom_threshold', models.IntegerField(default=500, help_text='Growth points to maintain bloom')),
                ('three_d_model_params', models.JSONField(default=dict)),
                ('fantasy_params', models.JSONField(blank=True, default=dict)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_mood_update', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='plant', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MemorySeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('emotional_value', models.FloatField(default=0.0, help_text='Emotional significance score')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('journal_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memory_seeds', to='journal.journalentry')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memory_seeds', to='plants.plant')),
            ],
            options={
                'ordering': ['-emotional_value', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlantLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('watered', 'Watered'), ('fertilized', 'Fertilized'), ('journal_sentiment', 'Journal Sentiment'), ('music_boost', 'Music Boost'), ('mood_update', 'Mood Update'), ('stage_change', 'Stage Change'), ('wilting', 'Wilting'), ('recovery', 'Recovery'), ('sunshine', 'Sunshine')], max_length=20)),
                ('note', models.TextField(blank=True)),
                ('growth_impact', models.FloatField(default=0.0, help_text='Growth points gained/lost')),
                ('value', models.FloatField(blank=True, help_text='Associated value (mood score, etc.)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='plants.plant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
